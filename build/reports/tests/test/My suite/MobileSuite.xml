<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="TestVagrants-MacBook-Pro-3.local" failures="0" tests="1" name="MobileSuite" time="25.589" errors="0" timestamp="2023-11-28T12:31:22 IST">
  <testcase classname="com.test.webapps.MobileTests" name="@BeforeMethod setup" time="25.328">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error executing adbExec. Original error: &amp;apos;Command &amp;apos;/Users/testvagrant/Library/Android/sdk/platform-tools/adb -P 5037 -s emulator-5554 shell &amp;apos;settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy&amp;apos;&amp;apos; exited with code 20&amp;apos;; Command output: cmd: Can&amp;apos;t find service: settings
cmd: Can&amp;apos;t find service: settings
cmd: Can&amp;apos;t find service: settings
 
Host info: host: &amp;apos;TestVagrants-MacBook-Pro-3.local&amp;apos;, ip: &amp;apos;fe80:0:0:0:8e0:95d6:e26b:43ab%en0&amp;apos;
Build info: version: &amp;apos;4.15.0&amp;apos;, revision: &amp;apos;1d14b5521b&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;13.5&amp;apos;, java.version: &amp;apos;17.0.1&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:autoGrantPermissions=true, appium:isHeadless=true, appium:appActivity=com.swaglabsmobileapp.MainActivity, appium:avd=Pixel_5, appium:deviceName=Pixel_5, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=/Users/testvagrant/Documents/WebAndMobileFramework/src/test/resources/test.apk, appium:platformVersion=13, appium:appPackage=com.swaglabsmobileapp}], desiredCapabilities=Capabilities {appium:app: /Users/testvagrant/Document..., appium:appActivity: com.swaglabsmobileapp.MainA..., appium:appPackage: com.swaglabsmobileapp, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:avd: Pixel_5, appium:deviceName: Pixel_5, appium:isHeadless: true, appium:platformVersion: 13, platformName: ANDROID}}]
Capabilities {appium:app: /Users/testvagrant/Document..., appium:appActivity: com.swaglabsmobileapp.MainA..., appium:appPackage: com.swaglabsmobileapp, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:avd: Pixel_5, appium:deviceName: Pixel_5, appium:isHeadless: true, appium:platformVersion: 13, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error executing adbExec. Original error: 'Command '/Users/testvagrant/Library/Android/sdk/platform-tools/adb -P 5037 -s emulator-5554 shell 'settings delete global hidden_api_policy_pre_p_apps;settings delete global hidden_api_policy_p_apps;settings delete global hidden_api_policy'' exited with code 20'; Command output: cmd: Can't find service: settings
cmd: Can't find service: settings
cmd: Can't find service: settings
 
Host info: host: 'TestVagrants-MacBook-Pro-3.local', ip: 'fe80:0:0:0:8e0:95d6:e26b:43ab%en0'
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '13.5', java.version: '17.0.1'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:autoGrantPermissions=true, appium:isHeadless=true, appium:appActivity=com.swaglabsmobileapp.MainActivity, appium:avd=Pixel_5, appium:deviceName=Pixel_5, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=/Users/testvagrant/Documents/WebAndMobileFramework/src/test/resources/test.apk, appium:platformVersion=13, appium:appPackage=com.swaglabsmobileapp}], desiredCapabilities=Capabilities {appium:app: /Users/testvagrant/Document..., appium:appActivity: com.swaglabsmobileapp.MainA..., appium:appPackage: com.swaglabsmobileapp, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:avd: Pixel_5, appium:deviceName: Pixel_5, appium:isHeadless: true, appium:platformVersion: 13, platformName: ANDROID}}]
Capabilities {appium:app: /Users/testvagrant/Document..., appium:appActivity: com.swaglabsmobileapp.MainA..., appium:appPackage: com.swaglabsmobileapp, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:avd: Pixel_5, appium:deviceName: Pixel_5, appium:isHeadless: true, appium:platformVersion: 13, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:177)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:238)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:168)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at com.webapp.automation.drivers.MobileDriverInitializer.initializeMobileDriver(MobileDriverInitializer.java:28)
at com.test.webapps.MobileTests.setup(MobileTests.java:16)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.test.webapps.MobileTests" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.test.webapps.MobileTests" name="loginTesting" time="0.0">
    <skipped/>
  </testcase> <!-- loginTesting -->
</testsuite> <!-- MobileSuite -->
